#include <iostream>

#include <string>

#include <fstream>

using namespace std;

struct purchase_order{

string phone_number;

string itemnumber;

double numberofitems;

double cost;

int process_dataing_plant_number;

double tax_rateorder;

double purhase_order_tax;

double net_cost_order;

double total_cost_order;

};



void input_data(ifstream &, purchase_order &);

void output_data(const purchase_order &);

void process_data(purchase_order &);




void input_data(ifstream &in, purchase_order &process_record)
{
in >> process_record.phone_number;

in >> process_record.itemnumber >> process_record.numberofitems >> process_record.cost >>

process_record.process_dataing_plant_number;
}



void output_data(const purchase_order &process_record) 
{
cout.setf(ios::showpoint);

cout.precision(2);

cout.setf(ios::fixed);

cout << process_record.phone_number << "\t";

cout << process_record.itemnumber << "\t" << process_record.numberofitems << "\t"

<< process_record.cost << "\t" << process_record.process_dataing_plant_number << "\t"

<< process_record.tax_rateorder << "\t" << process_record.purhase_order_tax << "\t"

<< process_record.net_cost_order << "\t" << process_record.total_cost_order << endl;
}

void process_data(purchase_order &process_record)
{
if (0 <= process_record.process_dataing_plant_number && process_record.process_dataing_plant_number <= 50)

process_record.tax_rateorder = 6;

else if (51 <= process_record.process_dataing_plant_number && process_record.process_dataing_plant_number <= 110)

process_record.tax_rateorder = 7;

else if (111 <= process_record.process_dataing_plant_number && process_record.process_dataing_plant_number <= 200)

process_record.tax_rateorder = 8;

else if (201 <= process_record.process_dataing_plant_number && process_record.process_dataing_plant_number <= 500)

process_record.tax_rateorder = 9;

else if (process_record.process_dataing_plant_number > 500)

process_record.tax_rateorder = 11;

process_record.purhase_order_tax =

process_record.numberofitems * process_record.cost * (process_record.tax_rateorder / 100.0);

process_record.net_cost_order = process_record.numberofitems * process_record.cost;

process_record.total_cost_order = process_record.net_cost_order + process_record.purhase_order_tax;
}

int main()
{
purchase_order cus_record;

ifstream in;

in.open("purchase_data.txt");

if (in.fail()) {

cout << "could not open correctly" << endl;
} 

else {

while (!in.eof()) {

input_data(in, cus_record);

process_data(cus_record);

output_data(cus_record);

}}

in.close();

return 0;

}










******************************************************************************************************************************


#include <iostream>

#include <string>

#include <fstream> 

using namespace std;


void input(ifstream &, string &, string &, double &, double &, int &);

void output(string, string, double, double, int, double, double, double,

double);

void process(double, double, int, double &, double &, double &, double &);



void input(ifstream & in, string & cell_number, string & item_number,

double & quantity, double & price, int & processing_plant)


{

in >> cell_number>>item_number>>quantity>>price>>processing_plant;


}



void output(string cell_number, string item_number, double quantity,

double price, int processing_plant, double tax_rate, double order_tax,

double net_cost, double total_cost)

{



cout.setf(ios::showpoint);

cout.precision(2);

cout.setf(ios::fixed);


cout << cell_number << "\t"<<item_number<<"\t"<<quantity<<"\t"<<price;
cout<<"\t"<<processing_plant<<"\t"<<(int)tax_rate<<"\t"<<order_tax<<"\t";
cout<<net_cost<<"\t"<<total_cost<<endl;



}



void process(double quantity, double price, int processing_plant, double &

tax_rate, double & order_tax, double & net_cost, double & total_cost)

{


if(processing_plant>=0 && processing_plant<=50)
{
   tax_rate=6;
}
else if(processing_plant>=51 && processing_plant<=110)
{
   tax_rate=7;
}
else if(processing_plant>=111 && processing_plant<=200)
{
   tax_rate=8;
}
else if(processing_plant>=210 && processing_plant<=500)
{
   tax_rate=9;
}
else if(processing_plant>500)
{
   tax_rate=11;
}

order_tax=quantity*price*(tax_rate/100);
net_cost=quantity*price;
total_cost=net_cost+order_tax;


}



int main()

{

string cell_number;

string item_number;

double quantity;

double price;

int processing_plant;

double tax_rate;

double order_tax;

double net_cost;

double total_cost;

ifstream in;

in.open("purchase_data.txt");

if (in.fail())

{

cout << "Input file did not open correctly" << endl;

}

else

{

while (!in.eof())

{

input(in, cell_number, item_number, quantity,price, processing_plant);

process(quantity,price,processing_plant,tax_rate,order_tax,net_cost,total_cost);

output(cell_number,item_number,quantity,price, processing_plant,tax_rate,order_tax,net_cost,total_cost);

}

}

in.close();

return 0;

}





/****************************************************************************************************************************/

#include <iostream>

#include <string>

#include <fstream> //you must include this library if you wish to do file i/o

using namespace std;



class order_record {

public:

string cell_number;

string item_number;

double quantity;

double price;

int processing_plant;

double tax_rate;

double order_tax;

double net_cost;

double total_cost;

};

// Prototypes for your functions: input, output, and process 

void input(ifstream &, order_record &);

void output(const order_record &);

void process(order_record &);


void input(ifstream &in, order_record &p_record) // example using the call by

// reference mechanism in C++

// -- call record is passed by

// reference --note & operator

{

in >> p_record.cell_number;

in >> p_record.item_number >> p_record.quantity >> p_record.price >>

p_record.processing_plant;

}



void output(const order_record &p_record) {

cout.setf(ios::showpoint);

cout.precision(2);

cout.setf(ios::fixed);


cout << p_record.cell_number << "\t";

cout << p_record.item_number << "\t" << p_record.quantity << "\t"

<< p_record.price << "\t" << p_record.processing_plant << "\t"

<< p_record.tax_rate << "\t" << p_record.order_tax << "\t"

<< p_record.net_cost << "\t" << p_record.total_cost << endl;

}


//process/calculate the tax_rate, order_tax, net_cost,

void process(order_record &p_record) 
{


if (0 <= p_record.processing_plant && p_record.processing_plant <= 50)

p_record.tax_rate = 6;

else if (51 <= p_record.processing_plant && p_record.processing_plant <= 110)

p_record.tax_rate = 7;

else if (111 <= p_record.processing_plant && p_record.processing_plant <= 200)

p_record.tax_rate = 8;

else if (201 <= p_record.processing_plant && p_record.processing_plant <= 500)

p_record.tax_rate = 9;

else if (p_record.processing_plant > 500)

p_record.tax_rate = 11;

p_record.order_tax =

p_record.quantity * p_record.price * (p_record.tax_rate / 100.0);

p_record.net_cost = p_record.quantity * p_record.price;

p_record.total_cost = p_record.net_cost + p_record.order_tax;

}

// Driver

int main() 
{

order_record customer_record;

ifstream in; 

in.open("purchase_data.txt");

if (in.fail()) 
{

cout << "Input file did not open correctly" << endl;

} 
else {

while (!in.eof()) 
{

input(in, customer_record);

process(customer_record);

output(customer_record);

}

}

in.close();

return 0;

}

/***************************************************************************************************************************/
